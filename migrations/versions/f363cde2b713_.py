"""empty message

Revision ID: f363cde2b713
Revises: dee8dcee93e4
Create Date: 2019-04-30 11:44:40.652541

"""
from alembic import op
import sqlalchemy as sa
from waitlist.base import db
from waitlist.storage.database import Ban, Whitelist, CharacterTypes
from waitlist.utility.eve_id_utils import get_character_type_by_id, get_char_corp_all_name_by_id_and_type
from waitlist.utility.outgate.exceptions import ApiException
import datetime
from time import sleep

# revision identifiers, used by Alembic.
revision = 'f363cde2b713'
down_revision = 'dee8dcee93e4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ban', sa.Column('target_type', sa.Enum('character', 'corporation', 'alliance', name='charactertypes'), nullable=True))
    op.drop_index('ix_ban_name', table_name='ban')
    op.drop_column('ban', 'name')
    op.add_column('ban', sa.Column('name', sa.String(length=255), nullable=True))
    op.add_column('whitelist', sa.Column('target_type', sa.Enum('character', 'corporation', 'alliance', name='charactertypes'), nullable=True))
    op.add_column('whitelist', sa.Column('name', sa.String(length=255), nullable=True))
    # we need the error count checks here, because we will produce them for sure
    # because we can't know if it is a corp, alliance or character before trying
    e_count = 0
    print('Getting eve type info for ban ids')
    print('Don\'t worries about errors not starting with: "Error with:"')
    for ban in db.session.query(Ban):
        print('For ID:', ban.id)
        if e_count > 50:
            print('We are sleeping for ~1min to wait for error counts to go down for sure')
            sleep(65)
            e_count = 0
        try:
            ban.targetType, ec = get_character_type_by_id(ban.id)
            print('Gotten Type:', ban.targetType)
            ban.name = get_char_corp_all_name_by_id_and_type(ban.id, ban.targetType)
            e_count += ec
        except ApiException as e:
            print('Error with:', ban.id)
            print(e)

    print("Getting eve type info for whitelist ids")
    for wl in db.session.query(Whitelist):
        print('For ID:', wl.characterID)
        if e_count > 50:
            print('We are sleeping for ~1min to wait for the error counts to go down for sure')
            sleep(65)
            e_count = 0
        try:
            wl.targetType, ec = get_character_type_by_id(wl.characterID)
            print('Gotten Type:', wl.targetType)
            wl.name = get_char_corp_all_name_by_id_and_type(wl.characterID, wl.targetType)
            e_count += ec
        except ApiException as e:
            print('Error with:', wl.characterID)
            print(e)

    db.session.commit()
    db.session.remove()
    op.drop_constraint('fk_whitelist_character_id_characters', 'whitelist', type_='foreignkey')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key('fk_whitelist_character_id_characters', 'whitelist', 'characters', ['character_id'], ['id'])
    op.drop_column('whitelist', 'name')
    op.drop_column('whitelist', 'target_type')
    op.drop_column('ban', 'name')
    op.add_column('ban', sa.Column('name', sa.String(length=100), nullable=True))
    op.create_index('ix_ban_name', 'ban', ['name'], unique=False)
    op.drop_column('ban', 'target_type')
    # ### end Alembic commands ###
