"""empty message

Revision ID: afa58b54a8fe
Revises: 5d4aee209354
Create Date: 2019-04-18 17:40:20.275827

"""
from alembic import op
import sqlalchemy as sa
from waitlist.utility.sde import update_invtypes
from waitlist.base import db
from waitlist.storage.database import MarketGroup, InvGroup, InvCategory, InvType

# revision identifiers, used by Alembic.
revision = 'afa58b54a8fe'
down_revision = '5d4aee209354'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_invmarketgroups_parent_group_id_invmarketgroups', 'invmarketgroups', type_='foreignkey')
    # adjust the type for the KF
    op.alter_column('invtypes', 'market_group_id', type_=sa.Integer, existing_type=sa.BigInteger)
    op.create_foreign_key(op.f('fk_invmarketgroups_parent_group_id_invmarketgroups'), 'invmarketgroups', 'invmarketgroups', ['parent_group_id'], ['market_group_id'], onupdate='CASCADE', ondelete='CASCADE')

    # now we actually need to make sure all of the ones we use FK to are up to date
    # this updates market groups and inventory groups+categories
    # only do this if there is any inventory data

    market_count = db.session.query(sa.func.count(MarketGroup.marketGroupID)).scalar()
    invgroup_count = db.session.query(sa.func.count(InvGroup.groupID)).scalar()
    invcat_count = db.session.query(sa.func.count(InvCategory.categoryID)).scalar()
    invtype_count = db.session.query(sa.func.count(InvType.typeID)).scalar()
    print("Queried counts")
    max_count = max(market_count, invgroup_count, invcat_count, invtype_count)
    if max_count > 0:
        print("We are updating all inventory data now, this can take a while")
        update_invtypes()
        print("Updating inventory data done")
    else:
        print("Empty database, no need to upgrade data")
    db.session.remove()

    # now we are ready to apply new FKs
    op.create_foreign_key(op.f('fk_invtypes_market_group_id_invmarketgroups'), 'invtypes', 'invmarketgroups', ['market_group_id'], ['market_group_id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(op.f('fk_invtypes_group_id_invgroup'), 'invtypes', 'invgroup', ['group_id'], ['group_id'], onupdate='CASCADE', ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_invtypes_group_id_invgroup'), 'invtypes', type_='foreignkey')
    op.drop_constraint(op.f('fk_invtypes_market_group_id_invmarketgroups'), 'invtypes', type_='foreignkey')
    op.drop_constraint(op.f('fk_invmarketgroups_parent_group_id_invmarketgroups'), 'invmarketgroups', type_='foreignkey')
    op.alter_column('invtypes', 'market_group_id', _type=sa.BigInteger, existing_type=sa.Integer)
    op.create_foreign_key('fk_invmarketgroups_parent_group_id_invmarketgroups', 'invmarketgroups', 'invmarketgroups', ['parent_group_id'], ['market_group_id'])
    # ### end Alembic commands ###
