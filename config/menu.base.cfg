[menu::menu::0]
# where should this menu be added to
# nav-main is a pre defined nav
# that gets rendered as the main menu
target_id = nav-main
# only required item are target_id and identity
identity = menu-left
classes = justify-content-start mr-auto
order = 0
# perms = commandcore
# this sets to only show if the user is loggedin (e.g. logout button)
# this can be on all items
# need_authenticated = True

[menu::menu::1]
# where should this menu be added to
target_id = nav-main
# only required items are target_id and identity
identity = menu-right
classes = justify-content-end
# higher order means later in the html
order = 1
# perms = commandcore|view_feedback

[menu::menuitem::0]
# where should this item be added to
# we use the menu we defined above with id menu-left
target_id = menu-left
# text to use for the menu item
title = Help
# send title through translation
use_gettext = True
# extra css classes to add to them menu item
# classes = 
# url for the menu item, can be view identifier
# if you set url_for to True
url = site_help
# set that url_for should be used on the url
url_for = True
# if this is set a <i></i> with the given css classes
# will be added infront of the title
iconclass = fa-question-circle-o
# higher number means later in html
order = 900
# perms = perm1|perm2
# user your own jinja2 template code inside the <li></li> nav item
# when rendered gets the menu item as 'item'
# customtemplate =

[menu::ddmenu::0]
target_id = menu-left
identity = tools
title = Tools
use_gettext = True
# these classes get added to the nav-item <li>
# classes = 
iconclass = fa-wrench
order = 2
# perms = 
# html rendered from the customtemplate only replaces the inner part of the <li>
# so the part that is displayed in the bar
# this item is accessible as 'menu' in the template
# customtemplate =
# what tag do use for the display part item, default is 'a'
# nodetag = 'a'
# additional css classes to add to the dropdown element, default ''
dropclasses = 
# additional css classes to add to the dropdown element, default 'nav-link'
triggerclasses = nav-link

[menu::ddmenu::1]
target_id = menu-right
identity = dd-settings
classes = ml-3
triggerclasses = btn btn-primary btn-sm
dropclasses = dropdown-menu-right
nodetag = button
# any % must be escaped by an other %
# so jinja2 syntax ist {% if ... %}
# but we need {%% if ... %%}
# because % is the interpolation trigger
customtemplate = {%% if current_user.is_authenticated and current_user.get_eve_id() is not none %%}<img class="profile-img-32" src="{{ eve_image('Character/'+(current_user.get_eve_id()|string)+'_32', 'jpg') }}"> {%% else %%}_('Not loggedin') {%% endif %%}

[menu::dditem::0]
target_id = dd-settings
title = Logout
use_gettext = True
url = logout
url_for = True
iconclass = fa-sign-out
order = 9998
need_authenticated = True

[menu::dditem::1]
target_id = dd-settings
title = About
use_gettext = True
url = about
url_for = True
iconclass = fa-info-circle
order = 9999

[menu::dditem::2]
target_id = tools
title = Command Core List
use_gettext = True
url = accounts_cc.accounts
url_for = True
iconclass = fa-list
order = 3
perms = commandcore

[menu::dddivider::0]
target_id = tools
order = 4
perms = commandcore|comphistory_search

[menu::dditem::3]
target_id = tools
title = Comp History Search
use_gettext = True
url = comp_history_search.index
url_for = True
iconclass = fa-search
order = 4


[menu::dditem::4]
target_id = tools
title = Custom Notifications
use_gettext = True,
url = notification.alarm_idx
url_for = True
order = 0
iconclass = fa-bell-o

[menu::dddivider::1]
target_id = tools
order = 1

[menu::dditem::5]
target_id = dd-settings
title = Settings
use_gettext = True
url = settings_overview.overview
url_for = True
perms = settings_access
iconclass = fa-cog
order = 0

[menu::menuitem::1]
target_id = menu-left
title = X-UP
use_gettext = True
classes = bg-success
url = xup.index
url_for = True
iconclasses = fa-user-plus
order = 0

[menu::dditem::6]
target_id = tools
title = Comp History
use_gettext = True
url = fittings.history_default
url_for = True
iconclass = fa-history
order = 3
perms = commandcore|comphistory_view

[menu::dditem::7]
target_id = tools
title = Reform
use_gettext = True
url = fleet_reform.index
url_for = True
iconclass = fa-undo
order = 3
perms = commandcore|fleet_management

# this is the language select
# it needs to have id=lang-select for the js to work
[menu::menuitem::2]
target_id = menu-right
order = 0
customtemplate = <select autocomplete="off" class="custom-select mt-1" id="lang-select">
		<option value="de"{%% if lang_code == "de" %%} selected{%% endif %%}>Deutsch</option>
		<option value="en"{%% if lang_code == "en" %%} selected{%% endif %%}>English</option>
	</select>
need_authenticated = True